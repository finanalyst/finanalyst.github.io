#!/usr/bin/env raku
use experimental :rakuast;
use RakuDoc::To::HTML-Extra;
use File::Directory::Tree;

my $rdp;
multi sub MAIN(:$docs = 'docs', :$to = 'rendered') {
    my @to-be-rendered;
    my @todo = $docs.IO;
    while @todo {
        for @todo.pop.dir -> $path {
            @to-be-rendered.push: $path unless $path.d;
            @todo.push: $path if $path.d;
        }
    }
    exit note "No sources found in ｢$docs｣" unless +@to-be-rendered;
    rmtree $to if $to.IO ~~ :e & :d;
    mktree $to;
    $rdp = RakuDoc::To::HTML-Extra.new.rdp;
    render-files(@to-be-rendered, $docs, $to)
}
sub render-files (@to-be-rendered, $dir, $to ) {
    my %file-data;
    for @to-be-rendered {
        my $short = .relative($dir).IO.extension('');
        say "rendering $_ to $to/$short";
        #topic of with not for
        my $ast = .slurp.AST;
        my $processed = $rdp.render($ast, :source-data(%(
            name => $short,
            modified => .modified,
            path => .dirname,
        )), :pre-finalised);
        $short .= subst( / \/ /, '_', :g);
        "$to/$short.html".IO.spurt($rdp.finalise);
        %file-data{$short} = %(
            title => $processed.title,
            subtitle => $processed.subtitle ?? $processed.subtitle !! 'No description',
            config => $processed.source-data<rakudoc-config>,
        );
    }
    my %listf := $rdp.templates.data<listfiles>;
    %listf<meta> = %file-data;
    my $ind = 'index.rakudoc'.IO;
    "$to/index.html".IO.spurt: $rdp.render($ind.slurp.AST, :source-data(%(
        name => 'index',
        modified => $ind.modified,
        path => $ind.dirname,
    )));
}