#!/usr/bin/env raku
use experimental :rakuast;
use RakuDoc::To::HTML-Extra;
use File::Directory::Tree;

my $rdp;
multi sub MAIN(:$docs = 'docs', :$to = 'rendered', :force(:$f) = False ) {
    my %sources;
    my @todo = $docs.IO;
    while @todo {
        for @todo.pop.dir -> $path {
            if $path.d { @todo.push: $path }
            else {
                %sources{$path.relative($docs).IO.extension('')} = %(
                    :$path,
                    modified => $path.modified
                )
            }
        }
    }
    exit note "No sources found in ｢$docs｣" unless +%sources;
    mktree $to unless $to.IO ~~ :e & :d;
    $rdp = RakuDoc::To::HTML-Extra.new.rdp;
    render-files(%sources, $to, $f)
}
sub render-files (%sources, $to, $f) {
    my %file-data;
    %file-data = EVALFILE 'file-data.rakuon' if 'file-data.rakuon'.IO ~~ :e & :f;
    my $changes = False;
    for %sources.kv -> $short, %info {
        my $processed;
        my $rendered-io = "$to/$short\.html".IO;
        my $path := %info<path>;
        if $f or %file-data{$short}:!exists
                or $rendered-io !~~ :e & :f
                or %info<modified> > $rendered-io.modified
        {
            say "rendering { %info<path> } to $rendered-io";
            $changes = True;
            $processed = $rdp.render($path.slurp.AST, :source-data(%(
                name => $short,
                modified => %info<modified>,
                :$path,
            )), :pre-finalised);
            with $short.IO.dirname { mktree "$to/$_" unless "$to/$_".IO ~~ :e & :d }
            $rendered-io.spurt($rdp.finalise);
            %file-data{$short} = %(
                title => $processed.title,
                subtitle => $processed.subtitle ?? $processed.subtitle !! 'No description',
                config => $processed.source-data<rakudoc-config>,
            );
        }
    }
    exit say('Nothing changed') unless $changes;
    my %listf := $rdp.templates.data<listfiles>;
    %listf<meta> = %file-data;
    my $ind = 'index.rakudoc'.IO;
    "$to/index.html".IO.spurt: $rdp.render($ind.slurp.AST, :source-data(%(
        name => 'index',
        modified => $ind.modified,
        path => $ind.dirname,
    )));
    'file-data.rakuon'.IO.spurt: %file-data.raku;
    # prevent jekyll being invoked
    "$to/.nojekyll".IO.spurt('');
    ".nojekyll".IO.spurt('')
}