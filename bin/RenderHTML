#!/usr/bin/env raku
use experimental :rakuast;
use RakuDoc::To::HTML-Extra;

my $rdp;
multi sub MAIN(:$docs = 'sources') {
#    my %docs = $docs.IO.dir(test => *.ends-with('.rakudoc')).map({ .extension('').basename => .modified });
#    my %rendered = dir(test => *.ends-with('.html')).map({ .extension('').basename => .modified });
#    my @to-be-rendered = %docs.pairs.grep({
#        %rendered{.key}:exists.not ||(%rendered{.key} < .value)
#    })>>.key;
    my @to-be-rendered;
    my @todo = $docs.IO;
    while @todo {
        for @todo.pop.dir -> $path {
            @to-be-rendered.push: $path unless $path.d;
            @todo.push: $path if $path.d;
        }
    }
    exit note "No sources found in ｢$docs｣" unless +@to-be-rendered;
    $rdp = RakuDoc::To::HTML-Extra.new.rdp;
    render-files(@to-be-rendered, $docs)
}
multi sub MAIN(Str:D $file, :$to) {
    exit note "｢$file.rakudoc｣ does not exist" unless "$file.rakudoc".IO ~~ :e & :f;
    $rdp = RakuDoc::To::HTML-Extra.new.rdp;
    render-files(["$file.rakudoc".IO,], '.', :$to)
}
sub render-files (@to-be-rendered, $dir, :$to) {
    my %file-data;
    for @to-be-rendered.sort {
        say "rendering: $_";
        my $short = $_.relative($dir).IO.extension('');
        #topic of with not for
        my $ast = $_.slurp.AST;
        my $processed = $rdp.render($ast, :source-data(%(
            name => $short,
            modified => $_.modified,
            path => $_.dirname,
        )), :pre-finalised);
        $short = $_ with $to;
        $short .= subst( / \/ /, '%3a%3a', :g);
        "$short.html".IO.spurt($rdp.finalise);
        %file-data{$short} = %(
            title => $processed.title,
            subtitle => $processed.subtitle ?? $processed.subtitle !! 'No description',
        );
    }
    create-index(%file-data);
}
sub create-index( %file-data ) {
    my $table = q:to/HEAD/;
        =begin table :!toc
        =row :header
        =cell Title
        =cell Description
        =cell Link
        HEAD

    for %file-data.kv -> $fn, %data {
        $table ~= qq:to/ROW/;
            =row
            =cell { %data<title> }
            =cell { %data<subtitle>:exists ?? %data<subtitle> !! 'No description' }
            =cell L<$fn| $fn >
            ROW
    }
    my $index = ('index.start'.IO.slurp ~
        $table ~
        q:to/END/ ~ 'index.end'.IO.slurp );
        =end table
        END
    'index.html'.IO.spurt: $rdp.render($index.AST, :source-data(%(
        name => 'index',
        modified => now,
        path => 'generated',
    )));
}